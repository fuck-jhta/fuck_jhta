DROP TABLE ADMIN;
CREATE TABLE ADMIN
(
ADMIN_ID VARCHAR2(30) PRIMARY KEY,
ADMIN_PWD VARCHAR2(30)
);

DROP SEQUENCE ADMIN_SEQ;
CREATE SEQUENCE ADMIN_SEQ;

DROP TABLE ALBUM_IMG;
CREATE TABLE ALBUM_IMG
(
ALBUM_IMG_NUM NUMBER(10) PRIMARY KEY,
ORG_FILE_NAME VARCHAR2(600),
SAVED_FILE_NAME VARCHAR2(600),
FILE_SIZE NUMBER(10)
);

DROP SEQUENCE ALBUM_IMG_SEQ;
CREATE SEQUENCE ALBUM_IMG_SEQ;

DROP TABLE ALBUM_INFO;
CREATE TABLE ALBUM_INFO
(
ALBUM_INFO_NUM NUMBER(10),
ALBUM_TITLE VARCHAR2(60),
ALBUM_PUBLISHER VARCHAR2(30), --MEMBER테이블을 위한FK
ARTIST VARCHAR2(30),
GENRE_CODE NUMBER(10),  --GENRE테이블을 위한FK
ALBUM_RELEASE_DATE DATE,
ALBUM_PUBLIC NUMBER(1),
ALBUM_IMG_NUM NUMBER(10), --앨범이미지테이블을 위한 FK
ALBUM_TYPE_CODE NUMBER(10), --앨범타입테이블을 위한 FK
ALBUM_LIKECOUNT NUMBER(10)
);

DROP SEQUENCE ALBUM_INFO_SEQ;
CREATE SEQUENCE ALBUM_INFO_SEQ;

DROP TABLE ALBUM_LIKE;
CREATE TABLE ALBUM_LIKE
(
ALBUM_LIKE_NUM NUMBER(10) PRIMARY KEY,
MEMBER_ID VARCHAR2(30), --FK MEMBER
ALBUM_INFO_NUM NUMBER(10) --FK ALBUM-ALBUM_NUM
);

DROP SEQUENCE ALBUM_LIKE_SEQ;
CREATE SEQUENCE ALBUM_LIKE_SEQ;

DROP TABLE ALBUM_TAG;
CREATE TABLE ALBUM_TAG
(
ALBUM_TAG_NUM NUMBER(10) PRIMARY KEY,
ALBUM_TAG_NAME VARCHAR2(50),
ALBUM_INFO_NUM NUMBER(10)    --FK FOR ALBUM_INFO
);

DROP SEQUENCE ALBUM_TAG_SEQ;
CREATE SEQUENCE ALBUM_TAG_SEQ;

DROP TABLE ALBUM_TYPE;
CREATE TABLE ALBUM_TYPE
(
ALBUM_TYPE_CODE NUMBER(10) PRIMARY KEY,
ALBUM_TYPE_NAME VARCHAR2(60)
);

DROP SEQUENCE ALBUM_TYPE_SEQ;
CREATE SEQUENCE ALBUM_TYPE_SEQ;

DROP TABLE ALBUM;
CREATE TABLE ALBUM(
	ALBUM_NUM NUMBER(10) PRIMARY KEY,
	ALBUM_INFO_NUM NUMBER(10), --ALBUM테이블을 위한 FK
	TRACK_NUM NUMBER(10)  --TRACK테이블을 위한 FK
);

DROP SEQUENCE ALBUM_SEQ;
CREATE SEQUENCE ALBUM_SEQ;

DROP TABLE COMMENTS;
CREATE TABLE COMMENTS
(
COMMENTS_NUM NUMBER(10) PRIMARY KEY,
MEMBER_ID VARCHAR2(30), -- FK : MEMBER-EMAIL
TRACK_NUM NUMBER(10), -- FK : TRACK-TRACK_NUM
COMMENTS_CONTENT VARCHAR2(300),
COMMENTS_WRITE_DATE DATE
);

DROP SEQUENCE COMMENTS_SEQ;
CREATE SEQUENCE COMMENTS_SEQ;

DROP TABLE FOLLOW;
CREATE TABLE FOLLOW
(
FOLLOW_NUM NUMBER(10) PRIMARY KEY,
FOLLOWER VARCHAR2(30), --FK : MEMBER-EMAIL
ARTIST VARCHAR2(30) --FK : MEMBER-EMAIL
);

DROP SEQUENCE FOLLOW_SEQ;
CREATE SEQUENCE FOLLOW_SEQ;

DROP TABLE GENRE;
CREATE TABLE GENRE
(
GENRE_CODE NUMBER(10) PRIMARY KEY,
GENRE_NAME VARCHAR2(60)
);

DROP SEQUENCE GENRE_SEQ;
CREATE SEQUENCE GENRE_SEQ;

DROP TABLE MAIN_AD;
CREATE TABLE MAIN_AD(
	AD_IMG_NUM NUMBER(10) PRIMARY KEY,
	AD_FILE_NUM NUMBER(10),--FK
	URL VARCHAR2(1000),--클릭 시 이동할 주소
	DESCRIPTION VARCHAR2(120)--간단한 설명
);

DROP SEQUENCE MAIN_AD_SEQ;
CREATE SEQUENCE MAIN_AD_SEQ;

DROP TABLE MAIN_AD_FILE;
CREATE TABLE MAIN_AD_FILE(
	AD_FILE_NUM NUMBER(10) PRIMARY KEY,
	AD_ORG_FILE_NAME VARCHAR2(1000),
	AD_SAVED_FILE_NAME VARCHAR2(1000),
	AD_FILE_SIZE NUMBER(10)
);

DROP SEQUENCE MAIN_AD_FILE_SEQ;
CREATE SEQUENCE MAIN_AD_FILE_SEQ;

DROP TABLE MEMBER_HIMG;
CREATE TABLE MEMBER_HIMG
(
MEMBER_HIMG_NUM NUMBER(10) PRIMARY KEY,
ORG_FILE_NAME VARCHAR2(600),
SAVED_FILE_NAME VARCHAR2(600),
FILE_SIZE NUMBER(10)
);

DROP SEQUENCE MEMBER_HIMG_SEQ;
CREATE SEQUENCE MEMBER_HIMG_SEQ;

DROP MEMBER_IMG;
CREATE MEMBER_IMG
(
MEMBER_IMG_NUM NUMBER(10) PRIMARY KEY,
ORG_FILE_NAME VARCHAR2(600),
SAVED_FILE_NAME VARCHAR2(600),
FILE_SIZE NUMBER(10)
);

DROP SEQUENCE MEMBER_IMG_SEQ;
CREATE SEQUENCE MEMBER_IMG_SEQ;

DROP TABLE MEMBER;
CREATE TABLE MEMBER(
	MEMBER_ID VARCHAR2(90) PRIMARY KEY,
	MEMBER_PWD VARCHAR2(30),
	MEMBER_INTRODUCE VARCHAR2(90),
	MEMBER_NICKNAME VARCHAR2(30),
	MEMBER_URL VARCHAR2(50),   --UNIQUE
	MEMBER_IMG_NUM NUMBER(10), --이미지테이블을 참조하는 FK
	MEMBER_HIMG_NUM NUMBER(10), --헤더이미지테이블을 참조하는 FK
	MEMBER_CONDITION NUMBER(2),  --계정상태를 저장하는 속성
	MEMBER_JOIN_DATE DATE
);

DROP SEQUENCE MEMBER_SEQ;
CREATE SEQUENCE MEMBER_SEQ;

DROP TABLE MESSAGE;
CREATE TABLE MESSAGE
(
MESSAGE_NUM NUMBER(10) PRIMARY KEY,
SEND_MEM VARCHAR2(30), --FK : MEMBER-EMAIL
RECEIVE_MEM VARCHAR2(30), --FK : MEMBER-EMAIL
CONTENT VARCHAR2(150),
SEND_DATE DATE
);

DROP SEQUENCE MESSAGE_SEQ;
CREATE SEQUENCE MESSAGE_SEQ;

DROP TABLE PLAYLIST_IMG;
CREATE TABLE PLAYLIST_IMG
(
PLAYLIST_IMG_NUM NUMBER(10) PRIMARY KEY,
ORG_FILE_NAME VARCHAR2(600),
SAVED_FILE_NAME VARCHAR2(600),
FILE_SIZE NUMBER(10)
);

DROP SEQUENCE PLAYLIST_IMG_SEQ;
CREATE SEQUENCE PLAYLIST_IMG_SEQ;

DROP TABLE PLAYLIST_INFO;
CREATE TABLE PLAYLIST_INFO(
	PLAYLIST_INFO_NUM NUMBER(10) PRIMARY KEY,
	MEMBER_ID VARCHAR2(30),  --MEMBER테이블을 참조하는 FK
	PLAYLIST_TITLE VARCHAR2(60),
	PLAYLIST_COMMENT VARCHAR2(600),
	PLAYLIST_PUBLIC NUMBER(1),
	PLAYLIST_LIKECOUNT NUMBER(10),
	PLAYLIST_IMG_NUM NUMBER(10),  --PLAYLIST_IMG테이블을 위한 FK
	PLAYLIST_RELEASE_DATE DATE
);

DROP SEQUENCE PLAYLIST_INFO_SEQ;
CREATE SEQUENCE PLAYLIST_INFO_SEQ;

DROP TABLE PLAYLIST_LIKE;
CREATE TABLE PLAYLIST_LIKE
(
PLAYLIST_LIKE_NUM NUMBER(10) PRIMARY KEY,
MEMBER_ID VARCHAR2(30),  --MEMBER테이블을 위한FK
PLAYLIST_INFO_NUM NUMBER(10) -- FK : PLAYLIST_INFO를 위한FK
);

DROP SEQUENCE PLAYLIST_LIKE_SEQ;
CREATE SEQUENCE PLAYLIST_LIKE_SEQ;

DROP TABLE PLAYLIST_TAG;
CREATE TABLE PLAYLIST_TAG
(
PLAYLIST_TAG_NUM NUMBER(10) PRIMARY KEY,
PLAYLIST_TAG_NAME VARCHAR2(50),
PLAYLIST_INFO_NUM NUMBER(10)    --FK FOR ALBUM_INFO
);

DROP SEQUENCE PLAYLIST_TAG_SEQ;
CREATE SEQUENCE PLAYLIST_TAG_SEQ;

DROP TABLE PLAYLIST;
CREATE TABLE PLAYLIST(
	PLAYLIST_NUM NUMBER(10) PRIMARY KEY,
	TRACK_NUM NUMBER(10), --TRACK테이블을 위한 FK
	PLAYLIST_INFO_NUM NUMBER(10) --PLAYLIST_INFO테이블을 위한 FK
);

DROP SEQUENCE PLAYLIST_SEQ;
CREATE SEQUENCE PLAYLIST_SEQ;

DROP TABLE REPORT_TYPE;
CREATE TABLE REPORT_TYPE
(
REPORT_CODE NUMBER(10) PRIMARY KEY,
REPORT_NAME VARCHAR2(10)
);

DROP SEQUENCE REPORT_TYPE_SEQ;
CREATE SEQUENCE REPORT_TYPE_SEQ;

DROP TABLE REPORT;
CREATE TABLE REPORT(
	REPORT_NUM NUMBER(10) PRIMARY KEY,
	REPORTER_ID VARCHAR2(30),  --멤버테이블을 위한 FK
	REPORT_ACCEPT NUMBER(1),
	REPORT_TYPE_NUM NUMBER(10),  --REPORT_TYPE을 위한 FK
	REPORT_CONTENT VARCHAR2(900),
	REPORT_TRACK_NUM NUMBER(10)  --TRACK_TABLE을 위한 FK
);

DROP SEQUENCE REPORT_SEQ;
CREATE SEQUENCE REPORT_SEQ;

DROP TABLE TRACK_FILE;
CREATE TABLE TRACK_FILE
(
TRACK_FILE_NUM NUMBER(10) PRIMARY KEY,
ORG_FILE_NAME VARCHAR2(600),
SAVED_FILE_NAME VARCHAR2(600),
FILE_SIZE NUMBER(10)
);
DROP SEQUENCE TRACK_FILE_SEQ;
CREATE SEQUENCE TRACK_FILE_SEQ;

DROP TABLE TRACK_IMG;
CREATE TABLE TRACK_IMG
(
TRACK_IMG_NUM NUMBER(10) PRIMARY KEY,
ORG_FILE_NAME VARCHAR2(600),
SAVED_FILE_NAME VARCHAR2(600),
FILE_SIZE NUMBER(10)
);
DROP SEQUENCE TRACK_IMG_SEQ;
CREATE SEQUENCE TRACK_IMG_SEQ;

DROP TABLE TRACK_LIKE;
CREATE TABLE TRACK_LIKE
(
TRACK_LIKE_NUM NUMBER(10) PRIMARY KEY,
MEMBER_ID VARCHAR2(30),  --MEMBER���̺��� ����FK
TRACK_NUM NUMBER(10) -- FK : PLAYLIST_INFO�� ����FK
);
DROP SEQUENCE TRACK_LIKE_SEQ;
CREATE SEQUENCE TRACK_LIKE_SEQ;

DROP TABLE TRACK_PLAYED;
CREATE TABLE TRACK_PLAYED(
	PLAY_NUMBER NUMBER(10) PRIMARY KEY, -- PK
	PLAYER_ID VARCHAR2(50), -- 재생한 유저 아이디
	PLAY_TRACK_NUM NUMBER(10), -- 재생한 트랙
	PLAY_DATE DATE -- 재생 날짜
);

DROP SEQUENCE TRACK_PLAYED_SEQ;
CREATE SEQUENCE TRACK_PLAYED_SEQ;

DROP TABLE TRACK_TAG;
CREATE TABLE TRACK_TAG
(
TRACK_TAG_NUM NUMBER(10) PRIMARY KEY,
TRACK_TAG_NAME VARCHAR2(50),
TRACK_NUM NUMBER(10)   --TRACK���̺� FK
);
DROP SEQUENCE TRACK_TAG_SEQ;
CREATE SEQUENCE TRACK_TAG_SEQ;

DROP TABLE TRACK;
CREATE TABLE TRACK(
	TRACK_NUM NUMBER(10) PRIMARY KEY,
	TRACK_TITLE VARCHAR2(60),
	TRACK_UPLOADER VARCHAR2(30),           -- �������̺��� ����Ű�� Ű��
	TRACK_ARTIST VARCHAR2(60),              -- ���� �۰��(EX �ۼ����� �г���)
	TRACK_PUBLIC NUMBER(1),
	TRACK_COMMENT VARCHAR2(90),
	TRACK_FILE_NUM NUMBER(10),        --������ ���̺��� ���� FK
	TRACK_IMG_NUM NUMBER(10),         --Ʈ���̹��� ���̺��� ���� FK
	TRACK_RELEASE_DATE DATE,
	TRACK_REPORT_COUNT NUMBER(10),          --�Ű����� Ƚ�� ����
	TRACK_CONDITION NUMBER(2),        --�Ű������� ó��
	TRACK_PLAYCOUNT NUMBER(20),            --����Ƚ��
	TRACK_LIKECOUNT NUMBER(20),
	GENRE_CODE NUMBER(10)             --�帣���̺��� ���� FK
);
DROP SEQUENCE TRACK_SEQ;
CREATE SEQUENCE TRACK_SEQ;
